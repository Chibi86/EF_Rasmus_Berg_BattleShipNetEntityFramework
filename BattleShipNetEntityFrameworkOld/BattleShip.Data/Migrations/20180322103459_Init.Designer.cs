// <auto-generated />
using BattleShip.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BattleShip.Data.Migrations
{
    [DbContext(typeof(BattleShipContext))]
    [Migration("20180322103459_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BattleShip.GameEngine.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BattleShip.GameEngine.Boat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BoatTypeId");

                    b.Property<int?>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("BoatTypeId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Boats");
                });

            modelBuilder.Entity("BattleShip.GameEngine.BoatHit", b =>
                {
                    b.Property<int>("BoatID");

                    b.Property<int>("PositionID");

                    b.HasKey("BoatID", "PositionID");

                    b.HasIndex("PositionID");

                    b.ToTable("BoatHits");
                });

            modelBuilder.Entity("BattleShip.GameEngine.BoatType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Size");

                    b.HasKey("Id");

                    b.ToTable("BoatType");
                });

            modelBuilder.Entity("BattleShip.GameEngine.GameBoard", b =>
                {
                    b.Property<string>("GameKey")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<int>("Player1Id");

                    b.Property<int>("Player2Id");

                    b.Property<bool>("Private");

                    b.Property<int>("Turn");

                    b.HasKey("GameKey");

                    b.HasIndex("AccountId");

                    b.ToTable("GameBoards");
                });

            modelBuilder.Entity("BattleShip.GameEngine.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<string>("GameBoardGameKey");

                    b.Property<int>("GameBoardId");

                    b.Property<bool>("HaveSeenEndScreen");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("GameBoardGameKey");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BattleShip.GameEngine.PlayerBoat", b =>
                {
                    b.Property<int>("PlayerId");

                    b.Property<int>("BoatId");

                    b.HasKey("PlayerId", "BoatId");

                    b.HasIndex("BoatId");

                    b.ToTable("PlayerBoats");
                });

            modelBuilder.Entity("BattleShip.GameEngine.PlayerHit", b =>
                {
                    b.Property<int>("PlayerId");

                    b.Property<int>("PositionId");

                    b.HasKey("PlayerId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("PlayerHits");
                });

            modelBuilder.Entity("BattleShip.GameEngine.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("BattleShip.GameEngine.Boat", b =>
                {
                    b.HasOne("BattleShip.GameEngine.BoatType", "Type")
                        .WithMany()
                        .HasForeignKey("BoatTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BattleShip.GameEngine.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("BattleShip.GameEngine.BoatHit", b =>
                {
                    b.HasOne("BattleShip.GameEngine.Boat", "Boat")
                        .WithMany("Hits")
                        .HasForeignKey("BoatID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BattleShip.GameEngine.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BattleShip.GameEngine.GameBoard", b =>
                {
                    b.HasOne("BattleShip.GameEngine.Account")
                        .WithMany("GameBoards")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("BattleShip.GameEngine.Player", b =>
                {
                    b.HasOne("BattleShip.GameEngine.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BattleShip.GameEngine.GameBoard", "GameBoard")
                        .WithMany()
                        .HasForeignKey("GameBoardGameKey");
                });

            modelBuilder.Entity("BattleShip.GameEngine.PlayerBoat", b =>
                {
                    b.HasOne("BattleShip.GameEngine.Boat", "Boat")
                        .WithMany()
                        .HasForeignKey("BoatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BattleShip.GameEngine.Player", "Player")
                        .WithMany("Boats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BattleShip.GameEngine.PlayerHit", b =>
                {
                    b.HasOne("BattleShip.GameEngine.Player", "Player")
                        .WithMany("AlreadyHitPositions")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BattleShip.GameEngine.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
